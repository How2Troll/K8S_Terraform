events {}

http {
    # Define upstream servers for each service
    upstream user_service {
        server user-service:8080;  # Refers to the Kubernetes service name and port
    }

    upstream auth_service {
        server auth-service:8081;  # Refers to the Kubernetes service name and port
    }

    upstream calendar_service {
        server calendar-service:8082;  # Refers to the Kubernetes service name and port
    }

    upstream prometheus_service {
        server prometheus-service:9090;  # Prometheus service name and port
    }

    server {
        listen 80;  # Nginx listens on port 80 for incoming traffic

        # Proxy settings for user-service
        location /user-service/ {
            rewrite ^/user-service/(.*)$ /$1 break;  # Remove the /user-service/ prefix
            proxy_pass http://user_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy settings for auth-service
        location /auth-service/ {
            rewrite ^/auth-service/(.*)$ /$1 break;  # Remove the /auth-service/ prefix
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy settings for calendar-service
        location /calendar-service/ {
            rewrite ^/calendar-service/(.*)$ /$1 break;  # Remove the /calendar-service/ prefix
            proxy_pass http://calendar_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy settings for Prometheus
        location /prometheus/ {
            proxy_pass http://prometheus_service/;  # Note the trailing slash
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Adjust paths in Prometheus responses
            sub_filter 'href="/' 'href="/prometheus/';
            sub_filter 'src="/' 'src="/prometheus/';
            sub_filter_once off;  # Ensure all occurrences are replaced
        }

        location = /graph {
            return 301 /prometheus/graph;
        }

        location = /alerts {
            return 301 /prometheus/alerts;
        }

    }
}
